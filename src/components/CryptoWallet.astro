---
import Logo from "../components/Logo.astro";
import { Image } from "@astrojs/image/components";

export interface Props {
  crypto: string;
  symbol: string;
  address: string;
  // make qr a boolean optional and true by default
  qr?: boolean;
}

let { crypto, symbol, address, qr } = Astro.props as Props;

if (!qr) {
  qr = true;
}
---

<h3>
  <Logo src={crypto.toLowerCase()} alt={crypto + " logo"} size={30} />
  {" "}
  {crypto}
</h3>
<div style="width: 100%; margin-bottom: 0.5rem">
  <code class="good-text">{address}</code>
</div>
<div class="flex-container">
  <button data-crypto-button class="button" id={crypto + "-copy-button"}
    >Copy {symbol} address</button
  >
  {
    qr && (
      <>
        <a
          href={`/qr/${crypto.toLowerCase()}.png`}
          target="_blank"
          style="width: 43.68px; height: 43.68px;"
        >
          <Image
            src={`/qr/${crypto.toLowerCase()}.png`}
            alt={`${crypto} Wallet QR Code`}
            format="webp"
            width={70}
            height={70}
            style="width: 43.68px; height: 43.68px;"
            quality={0.0000001}
          />
        </a>
      </>
    )
  }
</div>
<hr />

<style>
  .button {
    background-color: #0070ba;
    border: none;
    color: white;
    padding: 0.7rem 1rem;
    text-align: center;
    text-decoration: none !important;
    font-size: 1rem;
    cursor: pointer;
    border-radius: 0.25rem;
  }
  .good-text {
    font-size: 1.2rem;
  }
  @media screen and (max-width: 600px) {
    .good-text {
      font-size: 1rem;
    }
  }
  .button:hover {
    background-color: #005ea1;
  }
  .flex-container {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  .green {
    background-color: #3f9b42 !important;
  }
</style>

<script>
  const buttons = document.querySelectorAll("[data-crypto-button]");

  buttons.forEach((button) => {
    button.addEventListener("click", () => {
      copyAddress(button);
    });
  });

  const copyAddress = (button: Element) => {
    navigator.clipboard.writeText(
      button.parentElement!.previousElementSibling!.textContent!.trim()
    );
    const content = button.textContent;
    button.textContent = "Copied!";
    button.classList.add("green");

    setTimeout(() => {
      button.textContent = content;
      button.classList.remove("green");
    }, 900);
  };
</script>
