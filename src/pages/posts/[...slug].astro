---
import { getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
// 2. When it's time to render, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();
---

<html lang="en">
	<head>
		<BaseHead title={entry.data.title} description={entry.data.description} />
		<link rel="stylesheet" href="/prism.css">

		<style>
			.title {
				font-size: 2em;
				margin: 0.25em 0 0;
			}
			hr {
				border-top: 1px solid #ddd;
				margin: 1rem 0;
			}
		</style>
		<!-- import latex if it is used -->
		{entry.data.katex && <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.3/dist/katex.min.js" integrity="sha384-97gW6UIJxnlKemYavrqDHSX3SiygeOwIZhwyOKRfSaf0JWKRVj9hLASHgFTzT+0O" crossorigin="anonymous"/>}
		{entry.data.katex && <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.3/dist/katex.min.css" integrity="sha384-Juol1FqnotbkyZUT5Z7gUPjQ9gzlwCENvUZTpQBAPxtusdwFLRy382PSDx5UUJ4/" crossorigin="anonymous"/>}
		{entry.data.katex && <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.3/dist/contrib/auto-render.min.js" integrity="sha384-+VBxd3r6XgURycqtZ117nYw44OOcIax56Z4dCRWbxyPt0Koah1uHoK0o4+/RRE05" crossorigin="anonymous"
		onload='renderMathInElement(document.body,{delimiters: [
									{left: "$$", right: "$$", display: true},
								{left: "$", right: "$", display: false}
		]});'/>}
	</head>

	<body>
		<Header />
		<main>
			<article>
				<!-- {heroImage && <img width={720} height={360} src={heroImage} alt="" />} -->
				<h1 class="title" transition:name={`blogpost-name-${entry.slug}`}>{entry.data.title}</h1>
				{entry.data.pubDate && <time transition:name={`blogpost-pubdate-${entry.slug}`}>{entry.data.pubDate}</time>}
				<!-- {
					updatedDate && (
						<div>
							Last updated on <time>{updatedDate}</time>
						</div>
					)
				} -->
				<hr />
        <Content />
			</article>
		</main>
		<Footer />
	</body>
</html>
